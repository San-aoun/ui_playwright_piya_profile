name: Playwright Tests CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 6 AM UTC to catch any website issues
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test videos and screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-failures-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

  # Comprehensive testing job for main branch
  comprehensive-test:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install all Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run comprehensive quality tests
      run: npx playwright test comprehensive-quality.test.ts
      
    - name: Run performance and accessibility tests
      run: npx playwright test performance-accessibility-all-pages.test.ts
      
    - name: Run end-to-end navigation tests
      run: npx playwright test e2e-navigation.test.ts
      
    - name: Upload comprehensive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-test-report
        path: playwright-report/
        retention-days: 30

  # Mobile and responsive testing
  mobile-test:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run mobile responsiveness tests
      run: npx playwright test --grep "responsive|mobile|tablet" --project=chromium
      
    - name: Upload mobile test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-report
        path: playwright-report/
        retention-days: 14

  # Security and performance audit
  audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run security tests
      run: npx playwright test --grep "security|HTTPS|sensitive" --project=chromium
      
    - name: Run performance tests
      run: npx playwright test --grep "performance|load time|Core Web Vitals" --project=chromium

  # Test summary and notification
  summary:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [test, comprehensive-test, mobile-test, audit]
    if: always()
    
    steps:
    - name: Download all test artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-reports/
      continue-on-error: true
        
    - name: Create test summary
      run: |
        echo "# ðŸŽ­ Playwright Test Results Summary" > summary.md
        echo "" >> summary.md
        echo "## Test Execution Details" >> summary.md
        echo "- **Workflow:** ${{ github.workflow }}" >> summary.md
        echo "- **Triggered by:** ${{ github.event_name }}" >> summary.md
        echo "- **Branch:** ${{ github.ref_name }}" >> summary.md
        echo "- **Commit:** [\`${{ github.sha }}\`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})" >> summary.md
        echo "- **Actor:** ${{ github.actor }}" >> summary.md
        echo "- **Run ID:** [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> summary.md
        echo "" >> summary.md
        echo "## Job Results" >> summary.md
        echo "| Job | Status | Browser/Type |" >> summary.md
        echo "|-----|--------|--------------|" >> summary.md
        echo "| Basic Tests | ${{ needs.test.result }} | chromium, firefox, webkit |" >> summary.md
        echo "| Comprehensive Tests | ${{ needs.comprehensive-test.result }} | All browsers |" >> summary.md
        echo "| Mobile Tests | ${{ needs.mobile-test.result }} | Mobile devices |" >> summary.md
        echo "| Security Audit | ${{ needs.audit.result }} | Security & Performance |" >> summary.md
        echo "" >> summary.md
        
        # Determine overall status
        if [[ "${{ needs.test.result }}" == "failure" || "${{ needs.comprehensive-test.result }}" == "failure" || "${{ needs.mobile-test.result }}" == "failure" || "${{ needs.audit.result }}" == "failure" ]]; then
          echo "## ðŸš¨ Overall Status: FAILED" >> summary.md
          echo "" >> summary.md
          echo "Some tests have failed. Please check the individual job results above." >> summary.md
        else
          echo "## âœ… Overall Status: PASSED" >> summary.md
          echo "" >> summary.md
          echo "All tests have passed successfully!" >> summary.md
        fi
        
        echo "" >> summary.md
        echo "## Available Artifacts" >> summary.md
        if [ -d "all-reports" ]; then
          ls -la all-reports/ >> summary.md
        else
          echo "No artifacts available" >> summary.md
        fi
        
    - name: Add to job summary
      run: cat summary.md >> $GITHUB_STEP_SUMMARY
